{
    "blocks": [
        {
            "type": "init"
        },
        {
            "type": "variable-get",
            "name": "vfAuth"
        },
        {
            "type": "context-save",
            "contextKey": "vfAuth"
        },
        {
            "type": "graphql",
            "allowEmpty": true,
            "endpoint": "https://valnet.lurker.dev/api/graphql",
            "query": "query ($token: String) { viewer(token: $token) {  allRecipes {    id   name contextAgent {   id } classificationFacetValues { id   value facet { id name facetValues { id value } }}}}}",
            "variables": {
                "token": "context.vfAuth"
            }
        },
        {
            "//comment": "This mapping extracts and filters the correct recipes according to the context node ID",
            "type": "mapping",
            "mapping": "data.data.viewer.allRecipes[?contextAgent.id==$.context.queryParams.nodeId]"
        },
        {
            "type": "context-save",
            "contextKey": "saved"
        },
        {
            "type": "mapping",
            "mapping": "data && { data: data, facets: uniqBy(data[].classificationFacetValues[].facet[], 'id'), facetValuesFilter: uniq(data[].classificationFacetValues[].id) }"
        },
        {
            "type": "mapping",
            "mapping": "data.facets[].{ id: id, name: name, facetValues: facetValues[?includes($.data.facetValuesFilter, id)] }"
        },
        {
            "type": "batch",
            "blocks": [
                {
                    "type": "message",
                    "title": "{{ data.name }}"
                },
                {
                    "type": "mapping",
                    "mapping": "data.facetValues[].{ id: id, value: value, facet: $.data.{ id: id, name: name } }"
                },
                {
                    "type": "reference",
                    "labelGetter": "value",
                    "valueField": "id",
                    "outputGetter": "@"
                }
            ]
        },
        {
            "type": "mapping",
            "mapping": "context.saved[?all(classificationFacetValues[*].includes($.data[].id, id))]"
        },
        {
            "type": "mapping",
            "mapping": "data[0]"
        },
        {
            "type": "message",
            "title": "Selected Recipe:",
            "message": "{{#if data}}{{ data.name }} (ID: {{ data.id }}){{else}}No recipe found, try setting different facet values above.{{/if}}"
        },
        {
            "type": "switch",
            "valueGetter": "data && type(data.id) == `string`",
            "cases": [
                {
                    "value": true,
                    "blocks": [
                        {
                            "type": "actions",
                            "buttons": [
                                {
                                    "label": "Generate Plan",
                                    "color": "primary",
                                    "blocks": [
                                        {
                                            "type": "graphql",
                                            "endpoint": "https://valnet.lurker.dev/api/graphql",
                                            "query": "query ($token: String, $id:Int) {  viewer(token: $token) {    resourceClassification (id: $id) {  name    id   generatePlanFromWorkflowRecipe {   id  name  }  } } }",
                                            "variables": {
                                                "id": "data.id",
                                                "token": "context.vfAuth"
                                            }
                                        },
                                        {
                                            "type": "debug"
                                        },
                                        {
                                            "type": "message",
                                            "message": "Wait for plan to be generated... Plan generated with ID: {{ data.viewer.resourceClassification.generatePlanFromWorkflowRecipe.id }}"
                                        },
                                        {
                                            "type": "actions",
                                            "buttons": [
                                                {
                                                    "label": "Go",
                                                    "color": "primary",
                                                    "blocks": [
                                                        {
                                                            "type": "launch",
                                                            "adapter": "valueflows",
                                                            "workflowId": "updatePlan",
                                                            "context": {
                                                                "planId": "data.data.viewer.resourceClassification.generatePlanFromWorkflowRecipe.id"
                                                            }
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "id": "selectWorkType",
    "workflowId": "selectWorkType",
    "adapterName": "valueflows",
    "created": "2020-07-09T09:27:40.568Z",
    "tags": [],
    "updated": "2020-07-09T09:27:40.568Z",
    "modified": "2020-07-09T09:27:40.568Z",
    "title": "ValueFlows Select Type of Work"
}