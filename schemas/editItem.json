{
    "blocks": [
        {
            "type": "init"
        },
        {
            "type": "db",
            "operation": "fetch",
            "adapterName": "schemas",
            "schema": "schemas",
            "uuidGetter": "context.queryParams.schemaId",
            "blockComment": "Get schema from DB ( schemaId from page URL)"
        },
        {
            "type": "mapping",
            "mapping": "data && data[0]",
            "blockComment": "Get main data, strips metadata"
        },
        {
            "type": "context-save",
            "contextKey": "schema",
            "blockComment": "Saves to context.schema"
        },
        {
            "type": "db",
            "operation": "fetch",
            "adapterName": "schemas",
            "uuidGetter": "context.queryParams.id",
            "blockComment": "Get record from DB if exists"
        },
        {
            "type": "mapping",
            "mapping": "data && data[0]",
            "blockComment": "Get record data (strip metadata)"
        },
        {
            "type": "context-save",
            "contextKey": "saved",
            "blockComment": "Saves existing record as \"context.saved\""
        },
        {
            "type": "mapping",
            "mapping": "data || { uuid: context.queryParams.id }",
            "blockComment": "If no record exists, makes new empty object with UUID from URL"
        },
        {
            "type": "context-save",
            "key": "state.local.uuid",
            "valueGetter": "data.uuid",
            "blockComment": "Saves record UUID to state.local.uuid"
        },
        {
            "type": "context-save",
            "key": "state.local.update",
            "valueGetter": "length([context.saved][?uuid==$.data.uuid])>`0`",
            "blockComment": "set update flag"
        },
        {
            "type": "debug",
            "open": 2,
            "showContext": false,
            "showState": false,
            "blockComment": "Show existing record, or empty new record"
        },
        {
            "type": "form",
            "label": "Save",
            "hasSubmit": false,
            "schemaGetter": {
                "blocks": [
                    {
                        "type": "load-schema",
                        "adapterName": "schemas",
                        "schemaGetter": "context.schema && context.schema.name"
                    }
                ]
            },
            "injectContext": false,
            "blockComment": "Form populated by load-schema and existing record data if exists"
        },
        {
            "type": "context-save",
            "key": "state.global.record",
            "valueGetter": "data",
            "blockComment": "Saves latest record to state.global.record"
        },
        {
            "type": "debug",
            "open": 1,
            "showData": true,
            "showContext": false,
            "showState": false,
            "blockComment": "See form record output"
        },
        {
            "type": "actions",
            "buttons": [
                {
                    "label": "Back to item list",
                    "color": "default",
                    "blocks": [
                        {
                            "type": "launch",
                            "adapter": "schemas",
                            "workflowId": "itemsFromSchemaId",
                            "context": {
                                "schemaId": "context.queryParams.schemaId"
                            }
                        }
                    ],
                    "enabled": true
                },
                {
                    "enabledGetter": "!(state.local.update)",
                    "label": "Add new entry",
                    "color": "primary",
                    "blocks": [
                        {
                            "type": "db",
                            "operation": "add",
                            "adapterName": "schemas",
                            "schemaGetter": "context.schema.name"
                        }
                    ],
                    "enabled": false
                },
                {
                    "label": "Update entry",
                    "color": "primary",
                    "enabledGetter": "state.local.update",
                    "blocks": [
                        {
                            "type": "mapping",
                            "mapping": "merge(data, { uuid: $.state.local.uuid })"
                        },
                        {
                            "type": "db",
                            "operation": "update",
                            "adapterName": "schemas",
                            "schemaGetter": "context.schema.name"
                        }
                    ],
                    "enabled": true
                },
                {
                    "label": "Delete",
                    "color": "warn",
                    "blocks": [
                        {
                            "type": "db",
                            "operation": "delete",
                            "adapterName": "schemas",
                            "uuidGetter": "context.queryParams.id"
                        },
                        {
                            "type": "launch",
                            "adapter": "schemas",
                            "workflowId": "itemsFromSchemaId",
                            "context": {
                                "schemaId": "context.queryParams.schemaId"
                            }
                        }
                    ],
                    "enabled": true
                }
            ],
            "blockComment": "Action buttons for item (adding/updating/deletion)"
        },
        {
            "type": "mapping",
            "mapping": "state.global.record",
            "blockComment": "Load state.global.record back"
        },
        {
            "type": "load-schema",
            "templateToSchema": {
                "convertables": {
                    "websitemodel": "website-content",
                    "pagemodel": "page-content",
                    "blockmodel": "block-content"
                },
                "blockTypeDefaults": {
                    "c2d03aa9-7f2e-4c3c-b66a-024c5656bb21": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "default": "Image",
                                "readOnly": true,
                                "title": "Image"
                            },
                            "src": {
                                "type": "string",
                                "title": "Image URL"
                            }
                        }
                    },
                    "b3566261-654b-4743-b219-86bf05d595f5": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "default": "Text",
                                "readOnly": true,
                                "title": "Text"
                            },
                            "content": {
                                "type": "string",
                                "title": "Text content"
                            }
                        }
                    },
                    "c35dc4d1-aad2-4506-a003-2a1ecd445183": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "default": "Video",
                                "readOnly": true,
                                "title": "Video"
                            },
                            "src": {
                                "type": "string",
                                "title": "Video URL"
                            }
                        }
                    }
                }
            },
            "blockComment": "Transforms content-management-system template data to input content"
        },
        {
            "type": "debug",
            "open": 1,
            "showData": true,
            "showContext": false,
            "showState": true,
            "blockComment": "See meta-schema output"
        },
        {
            "type": "context-save",
            "key": "state.global.metaschema",
            "blockComment": ""
        },
        {
            "type": "actions",
            "buttons": [
                {
                    "label": "Save metaschema",
                    "color": "default",
                    "blocks": [
                        {
                            "type": "mapping",
                            "mapping": "{ uuid: uuid(json(data)), schema: data, parentSchemaId: context.queryParams.schemaId, parentRecordId: context.queryParams.id, parentSchema:context.schema }"
                        },
                        {
                            "type": "db",
                            "operation": "upsert",
                            "adapterName": "schemas",
                            "schema": "metaschemas"
                        }
                    ],
                    "enabled": true
                },
                {
                    "label": "List Meta-Schemas",
                    "color": "default",
                    "blocks": [
                        {
                            "type": "launch",
                            "adapter": "schemas",
                            "workflowId": "metaschemaList"
                        }
                    ],
                    "enabled": true
                }
            ],
            "blockComment": "metaschema save and list buttons"
        },
        {
            "type": "mapping",
            "mapping": "json(state.global.metaschema)",
            "blockComment": "Makes meta-schema output a JSON string"
        },
        {
            "type": "template",
            "template": "{{{data}}}",
            "blockComment": "See meta-schema output as a copy-pasteable string"
        }
    ],
    "id": "editItem",
    "workflowId": "editItem",
    "adapterName": "schemas",
    "created": "2022-09-29T15:01:16.425Z",
    "tags": [],
    "updated": "2022-09-29T15:01:16.424Z",
    "modified": "2022-09-29T15:01:16.424Z",
    "title": "Edit Item"
}