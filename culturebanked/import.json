{
    "blocks": [
        {
            "type": "init"
        },
        {
            "type": "gsheet",
            "simple": true,
            "key": "https://docs.google.com/spreadsheets/d/1YIQCavPvOzTArBc1d2dlbP3bhHVHI65o3-AEHp_urXA/",
            "shareUrl": "https://docs.google.com/spreadsheets/d/e/2PACX-1vS9bFRzFzBEQKOSNfGUh91JEUx4K3z0ZMRzmagW5TV6Arm4OtjI0H_ELzqHhPf7qi1EE9EV9u2j7a9h/pub?gid=0&single=true&output=csv",
            "blockComment": ""
        },
        {
            "type": "grid",
            "gridOptions": {
                "pagination": true,
                "paginationPageSize": 25,
                "rowSelection": "multiple",
                "suppressRowClickSelection": true
            },
            "columnDefs": [
                {
                    "headerCheckboxSelection": true,
                    "checkboxSelection": true
                },
                {
                    "headerName": "Asset",
                    "field": "Asset"
                },
                {
                    "headerName": "Medium",
                    "field": "Medium"
                },
                {
                    "headerName": "After",
                    "field": "After"
                },
                {
                    "headerName": "Owner",
                    "field": "Owner"
                },
                {
                    "headerName": "Market Platforms",
                    "field": "Market Platform(s)"
                }
            ]
        },
        {
            "type": "message",
            "message": "{{#if data.length}}{{data.length}} items selected{{/if}}"
        },
        {
            "type": "mapping",
            "mapping": "data[*].{asset: trim(Asset), width: trim(\"Width (mm)\"), height: trim(\"Height (mm)\"), medium: trim(Medium), after: trim(After), location: trim(Location), owner: Owner.split(@, ',')[].{ name: trim(@) }, marketPlatforms: \"Market Platform(s)\".split(@, ',')[].trim(@), beneficiaries: Beneficiaries.split(@, ',')[].{ name: trim(@) } , assetManager: trim(\"Asset Manager\"), licenseDetails: trim(\"License Details\")  }"
        },
        {
            "type": "multi",
            "batches": [
                {
                    "blocks": [
                        {
                            "type": "mapping",
                            "mapping": "data && uniq(data[].[owner[].name, beneficiaries[].name, assetManager][][])"
                        }
                    ]
                },
                {
                    "blocks": [
                        {
                            "type": "mapping",
                            "mapping": "data && uniq(data[].licenseDetails)"
                        }
                    ]
                },
                {
                    "blocks": [
                        {
                            "type": "mapping",
                            "mapping": "data && uniq(data[].marketPlatforms[][])[?length(@) > `0`]"
                        }
                    ]
                },
                {
                    "blocks": [
                        {
                            "type": "mapping",
                            "mapping": "data"
                        }
                    ]
                }
            ]
        },
        {
            "type": "mapping",
            "mapping": "data && { \n    parties: data[0][].{ type: `party`, id: uuid(), name: @ }, \n    licenses: data[1][].{ type: `license`, id: uuid(), name: @ }, \n    marketPlatforms: data[2][].{ type: `platform`, id: uuid(), name: @ }, \n    works: data[3][].merge(@, { id: uuid(), type: `work` }) \n}",
            "blockComment": ""
        },
        {
            "type": "mapping",
            "mapping": "data && merge(data,\n    { works: data.works[].merge(@, { \n        assetManager: find($.data.parties, 'name', assetManager).id, \n        owner: owner[].find($.data.parties, 'name', name).{ partyId: id, split: `0` }, \n        marketPlatforms: marketPlatforms[].find($.data.marketPlatforms, 'name', @).{ marketId: id },\n        beneficiaries: beneficiaries[].find($.data.parties, 'name', name).{ partyId: id, split: `0` }, \n        licenseDetails: find($.data.licenses, 'name', licenseDetails).id \n    }) \n})",
            "blockComment": ""
        },
        {
            "type": "mapping",
            "mapping": "data.parties && data.[parties, licenses, marketPlatforms, works][]\n    .merge(@, \n        { \n            uuid: id, \n            schema: type \n        }\n    )",
            "blockComment": ""
        },
        {
            "type": "actions",
            "buttons": [
                {
                    "label": "Import",
                    "color": "primary",
                    "blocks": [
                        {
                            "type": "batch",
                            "blocks": [
                                {
                                    "type": "db",
                                    "skipFirst": false,
                                    "operation": "add",
                                    "schemaGetter": "data.type",
                                    "adapterName": "culturebanked"
                                }
                            ]
                        }
                    ],
                    "enabled": true
                }
            ],
            "blockComment": ""
        }
    ],
    "id": "import",
    "workflowId": "import",
    "adapterName": "culturebanked",
    "created": "2024-07-10T11:27:49.738Z",
    "tags": [],
    "updated": "2024-07-10T11:27:49.738Z",
    "modified": "2024-07-10T11:27:49.738Z",
    "title": "Art (Import)"
}